{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\SPORTSWEBAPP\\\\frontend\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBell } from '@fortawesome/free-solid-svg-icons';\nimport './Navbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [showNotificationBox, setShowNotificationBox] = useState(false);\n  const [unreadNotifications, setUnreadNotifications] = useState(0);\n  useEffect(() => {\n    const socket = io('http://localhost:3009', {\n      transports: ['websocket']\n    });\n    socket.on('connect', () => {\n      console.log('WebSocket connection established');\n    });\n    socket.on('newRegistration', notification => {\n      setNotifications(prevNotifications => [...prevNotifications, notification]);\n      setUnreadNotifications(prevUnreadNotifications => prevUnreadNotifications + 1);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const toggleNotificationBox = () => {\n    setShowNotificationBox(!showNotificationBox);\n    if (!showNotificationBox) {\n      setUnreadNotifications(0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Event Platform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-container\",\n      onClick: toggleNotificationBox,\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faBell,\n        className: \"notification-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), unreadNotifications > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"notification-count\",\n        children: unreadNotifications\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), showNotificationBox && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-box\",\n        children: notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: notification.message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"cRduX9TefmjQfEl/Gjqc3OOpnoU=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","io","FontAwesomeIcon","faBell","jsxDEV","_jsxDEV","Navbar","_s","notifications","setNotifications","showNotificationBox","setShowNotificationBox","unreadNotifications","setUnreadNotifications","socket","transports","on","console","log","notification","prevNotifications","prevUnreadNotifications","disconnect","toggleNotificationBox","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","icon","map","index","message","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/SPORTSWEBAPP/frontend/src/components/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBell } from '@fortawesome/free-solid-svg-icons';\r\nimport './Navbar.css';\r\n\r\nconst Navbar = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [showNotificationBox, setShowNotificationBox] = useState(false);\r\n  const [unreadNotifications, setUnreadNotifications] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const socket = io('http://localhost:3009', {\r\n      transports: ['websocket'],\r\n    });\r\n\r\n    socket.on('connect', () => {\r\n      console.log('WebSocket connection established');\r\n    });\r\n\r\n    socket.on('newRegistration', (notification) => {\r\n      setNotifications((prevNotifications) => [...prevNotifications, notification]);\r\n      setUnreadNotifications((prevUnreadNotifications) => prevUnreadNotifications + 1);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const toggleNotificationBox = () => {\r\n    setShowNotificationBox(!showNotificationBox);\r\n    if (!showNotificationBox) {\r\n      setUnreadNotifications(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>My Event Platform</h1>\r\n      <div className=\"notification-container\" onClick={toggleNotificationBox}>\r\n        <FontAwesomeIcon icon={faBell} className=\"notification-icon\" />\r\n        {unreadNotifications > 0 && (\r\n          <span className=\"notification-count\">{unreadNotifications}</span>\r\n        )}\r\n        {showNotificationBox && (\r\n          <div className=\"notification-box\">\r\n            {notifications.map((notification, index) => (\r\n              <p key={index}>{notification.message}</p>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}