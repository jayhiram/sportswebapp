{"ast":null,"code":"/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar hasBin = require('has-binary-data');\nvar indexOf = require('indexof');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket(io, nsp) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.open();\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.subEvents();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  var io = this.io;\n  this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.open = Socket.prototype.connect = function () {\n  if (this.connected) return this;\n  this.io.open(); // ensure open\n  if ('open' == this.io.readyState) this.onopen();\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n  var args = toArray(arguments);\n  var parserType = parser.EVENT; // default\n  if (hasBin(args)) {\n    parserType = parser.BINARY_EVENT;\n  } // binary\n  var packet = {\n    type: parserType,\n    data: args\n  };\n\n  // event ack callback\n  if ('function' == typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' != this.nsp) {\n    this.packet({\n      type: parser.CONNECT\n    });\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  if (packet.nsp != this.nsp) return;\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n    case parser.ACK:\n      this.onack(packet);\n      break;\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n    self.packet({\n      type: type,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  debug('calling ack %s with %j', packet.id, packet.data);\n  var fn = this.acks[packet.id];\n  fn.apply(this, packet.data);\n  delete this.acks[packet.id];\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  // clean subscriptions to avoid reconnections\n  for (var i = 0; i < this.subs.length; i++) {\n    this.subs[i].destroy();\n  }\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close = Socket.prototype.disconnect = function () {\n  if (!this.connected) return this;\n  debug('performing disconnect (%s)', this.nsp);\n  this.packet({\n    type: parser.DISCONNECT\n  });\n\n  // remove socket from pool\n  this.destroy();\n\n  // fire events\n  this.onclose('io client disconnect');\n  return this;\n};","map":{"version":3,"names":["parser","require","Emitter","toArray","on","bind","debug","hasBin","indexOf","module","exports","Socket","events","connect","connect_error","connect_timeout","disconnect","error","reconnect","reconnect_attempt","reconnect_failed","reconnect_error","reconnecting","emit","prototype","io","nsp","json","ids","acks","open","receiveBuffer","sendBuffer","connected","disconnected","subEvents","subs","readyState","onopen","send","args","arguments","unshift","apply","ev","hasOwnProperty","parserType","EVENT","BINARY_EVENT","packet","type","data","length","pop","id","push","CONNECT","onclose","reason","onpacket","onconnect","onevent","ACK","onack","BINARY_ACK","DISCONNECT","ondisconnect","ERROR","ack","self","sent","fn","emitBuffered","i","destroy","close"],"sources":["C:/Users/Admin/Desktop/SPORTSWEBAPP/frontend/node_modules/socket.io-client/lib/socket.js"],"sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar hasBin = require('has-binary-data');\nvar indexOf = require('indexof');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket(io, nsp){\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.open();\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.subEvents();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function() {\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function(){\n  if (this.connected) return this;\n\n  this.io.open(); // ensure open\n  if ('open' == this.io.readyState) this.onopen();\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function(){\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function(ev){\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var parserType = parser.EVENT; // default\n  if (hasBin(args)) { parserType = parser.BINARY_EVENT; } // binary\n  var packet = { type: parserType, data: args };\n\n  // event ack callback\n  if ('function' == typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function(packet){\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function(){\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' != this.nsp) {\n    this.packet({ type: parser.CONNECT });\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function(reason){\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function(packet){\n  if (packet.nsp != this.nsp) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function(packet){\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function(id){\n  var self = this;\n  var sent = false;\n  return function(){\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n    self.packet({\n      type: type,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function(packet){\n  debug('calling ack %s with %j', packet.id, packet.data);\n  var fn = this.acks[packet.id];\n  fn.apply(this, packet.data);\n  delete this.acks[packet.id];\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function(){\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function(){\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function(){\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function(){\n  // clean subscriptions to avoid reconnections\n  for (var i = 0; i < this.subs.length; i++) {\n    this.subs[i].destroy();\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function(){\n  if (!this.connected) return this;\n\n  debug('performing disconnect (%s)', this.nsp);\n  this.packet({ type: parser.DISCONNECT });\n\n  // remove socket from pool\n  this.destroy();\n\n  // fire events\n  this.onclose('io client disconnect');\n  return this;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}