{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\SPORTSWEBAPP\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = 'http://localhost:3001'; // Update with your server URL\n\nconst App = () => {\n  _s();\n  const [userId, setUserId] = useState('');\n  const [username, setUsername] = useState('');\n  const [messageInput, setMessageInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [notificationCount, setNotificationCount] = useState(0);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const newSocket = socketIOClient(ENDPOINT);\n    setSocket(newSocket);\n    newSocket.on('receive-message', ({\n      senderId,\n      message\n    }) => {\n      console.log('Message received:', senderId, message);\n      setMessages(prevMessages => [...prevMessages, {\n        senderId,\n        message\n      }]);\n      setNotificationCount(prevCount => prevCount + 1);\n    });\n    return () => newSocket.disconnect();\n  }, []);\n  const handleLogin = () => {\n    // Simulate user login with hardcoded user ID and username\n    setUserId('jane');\n    setUsername('Jane');\n    socket.emit('login', 'jane');\n  };\n  const handleMessageInputChange = e => {\n    setMessageInput(e.target.value);\n  };\n  const sendMessage = () => {\n    if (socket && messageInput.trim() !== '') {\n      socket.emit('send-message', {\n        senderId: userId,\n        recipientId: 'kush',\n        message: messageInput\n      });\n      setMessages(prevMessages => [...prevMessages, {\n        senderId: userId,\n        message: messageInput\n      }]);\n      setMessageInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), !userId && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }, this), userId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [msg.senderId === userId ? 'You: ' : `${msg.senderId}: `, msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: messageInput,\n        onChange: handleMessageInputChange,\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Notifications: \", notificationCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8G19tHkInLME48XduKIz9WGpZVI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","socketIOClient","jsxDEV","_jsxDEV","ENDPOINT","App","_s","userId","setUserId","username","setUsername","messageInput","setMessageInput","messages","setMessages","notificationCount","setNotificationCount","socket","setSocket","newSocket","on","senderId","message","console","log","prevMessages","prevCount","disconnect","handleLogin","emit","handleMessageInputChange","e","target","value","sendMessage","trim","recipientId","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","index","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/SPORTSWEBAPP/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nconst ENDPOINT = 'http://localhost:3001'; // Update with your server URL\r\n\r\nconst App = () => {\r\n  const [userId, setUserId] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [messageInput, setMessageInput] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [notificationCount, setNotificationCount] = useState(0);\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const newSocket = socketIOClient(ENDPOINT);\r\n    setSocket(newSocket);\r\n\r\n    newSocket.on('receive-message', ({ senderId, message }) => {\r\n      console.log('Message received:', senderId, message);\r\n      setMessages(prevMessages => [...prevMessages, { senderId, message }]);\r\n      setNotificationCount(prevCount => prevCount + 1);\r\n    });\r\n\r\n    return () => newSocket.disconnect();\r\n  }, []);\r\n\r\n  const handleLogin = () => {\r\n    // Simulate user login with hardcoded user ID and username\r\n    setUserId('jane');\r\n    setUsername('Jane');\r\n    socket.emit('login', 'jane');\r\n  };\r\n\r\n  const handleMessageInputChange = (e) => {\r\n    setMessageInput(e.target.value);\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (socket && messageInput.trim() !== '') {\r\n      socket.emit('send-message', { senderId: userId, recipientId: 'kush', message: messageInput });\r\n      setMessages(prevMessages => [...prevMessages, { senderId: userId, message: messageInput }]);\r\n      setMessageInput('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome, {username}!</h1>\r\n      {!userId && <button onClick={handleLogin}>Login</button>}\r\n      {userId && (\r\n        <div>\r\n          <div>\r\n            {messages.map((msg, index) => (\r\n              <div key={index}>\r\n                {msg.senderId === userId ? 'You: ' : `${msg.senderId}: `}\r\n                {msg.message}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            value={messageInput}\r\n            onChange={handleMessageInputChange}\r\n            placeholder=\"Type your message...\"\r\n          />\r\n          <button onClick={sendMessage}>Send</button>\r\n        </div>\r\n      )}\r\n      <div>\r\n        Notifications: {notificationCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}