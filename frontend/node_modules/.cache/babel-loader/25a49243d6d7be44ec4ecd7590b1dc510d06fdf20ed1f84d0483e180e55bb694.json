{"ast":null,"code":"/**\n * Module dependencies.\n */\n\nvar index = require('indexof');\n\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n;\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on = function (event, fn) {\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || []).push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function (event, fn) {\n  var self = this;\n  this._callbacks = this._callbacks || {};\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n  fn._off = on;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = function (event, fn) {\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var i = index(callbacks, fn._off || fn);\n  if (~i) callbacks.splice(i, 1);\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function (event) {\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1),\n    callbacks = this._callbacks[event];\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function (event) {\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function (event) {\n  return !!this.listeners(event).length;\n};","map":{"version":3,"names":["index","require","module","exports","Emitter","obj","mixin","key","prototype","on","event","fn","_callbacks","push","once","self","off","apply","arguments","_off","removeListener","removeAllListeners","length","callbacks","i","splice","emit","args","slice","call","len","listeners","hasListeners"],"sources":["C:/Users/Admin/Desktop/SPORTSWEBAPP/frontend/node_modules/emitter/index.js"],"sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar index = require('indexof');\n\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  fn._off = on;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var i = index(callbacks, fn._off || fn);\n  if (~i) callbacks.splice(i, 1);\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}