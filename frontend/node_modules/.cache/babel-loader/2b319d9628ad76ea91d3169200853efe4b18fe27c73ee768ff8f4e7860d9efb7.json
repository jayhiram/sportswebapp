{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\SPORTSWEBAPP\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"http://localhost:3001\"; // Update with your server URL\n\nconst users = [{\n  id: \"jane\",\n  name: \"Jane\"\n}, {\n  id: \"kush\",\n  name: \"Kush\"\n}, {\n  id: \"winnie\",\n  name: \"Winnie\"\n}, {\n  id: \"james\",\n  name: \"James\"\n}\n// Add more users as needed\n];\nconst Chat = () => {\n  _s();\n  const [userId, setUserId] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [unreadMessages, setUnreadMessages] = useState(0);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const newSocket = socketIOClient(ENDPOINT);\n    setSocket(newSocket);\n    newSocket.on(\"receive-message\", ({\n      senderId,\n      message,\n      threadId\n    }) => {\n      if (senderId !== userId) {\n        setUnreadMessages(unreadMessages + 1);\n      }\n      setMessages(prevMessages => {\n        const updatedMessages = [...prevMessages];\n        const threadIndex = updatedMessages.findIndex(thread => thread.threadId === threadId);\n        if (threadIndex === -1) {\n          updatedMessages.push({\n            threadId,\n            messages: [message]\n          });\n        } else {\n          updatedMessages[threadIndex].messages.push(message);\n        }\n        return updatedMessages;\n      });\n    });\n    return () => newSocket.disconnect();\n  }, []);\n  const handleLogin = (id, name) => {\n    setUserId(id);\n    setUsername(name);\n    setMessages([]);\n    setUnreadMessages(0);\n    setSelectedUser(null);\n    socket.emit(\"login\", id);\n  };\n  const sendMessage = threadId => {\n    if (socket && messageInput.trim() !== \"\") {\n      socket.emit(\"send-message\", {\n        senderId: userId,\n        threadId,\n        message: messageInput\n      });\n      setMessages(prevMessages => {\n        const updatedMessages = [...prevMessages];\n        const threadIndex = updatedMessages.findIndex(thread => thread.threadId === threadId);\n        if (threadIndex === -1) {\n          updatedMessages.push({\n            threadId,\n            messages: [messageInput]\n          });\n        } else {\n          updatedMessages[threadIndex].messages.push(messageInput);\n        }\n        return updatedMessages;\n      });\n      setMessageInput(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", username || \"Guest\", \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), !userId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLogin(user.id, user.name),\n        style: {\n          marginRight: \"10px\"\n        },\n        children: [\"Login as \", user.name]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), userId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          marginBottom: \"10px\"\n        },\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #ccc\",\n            padding: \"10px\",\n            marginRight: \"10px\",\n            cursor: \"pointer\",\n            flexGrow: 1,\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\"\n          },\n          onClick: () => {\n            if (user.id !== userId) {\n              setSelectedUser(user);\n              setMessages([]);\n              socket.emit(\"start-conversation\", user.id);\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [user.name, user.id === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"green\",\n                marginLeft: \"10px\"\n              },\n              children: \"(Online)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: user.id === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                backgroundColor: \"red\",\n                color: \"white\",\n                padding: \"5px\"\n              },\n              children: unreadMessages > 0 && unreadMessages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"300px\",\n          overflow: \"auto\",\n          border: \"1px solid #ccc\",\n          marginBottom: \"10px\"\n        },\n        children: selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column-reverse\"\n          },\n          children: messages.map((thread, index) => thread.messages.map((message, messageIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              alignSelf: thread.threadId === selectedUser.id ? \"flex-end\" : \"flex-start\",\n              margin: \"5px\",\n              borderRadius: \"10px\",\n              padding: \"10px\",\n              maxWidth: \"60%\",\n              backgroundColor: thread.threadId === selectedUser.id ? \"#dcf8c6\" : \"#f5f5f5\"\n            },\n            children: message\n          }, `${thread.threadId}-${messageIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: messageInput,\n          onChange: e => setMessageInput(e.target.value),\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sendMessage(selectedUser.id),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"QonONiOOvulsETX3oVNUni+NN2I=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","socketIOClient","jsxDEV","_jsxDEV","ENDPOINT","users","id","name","Chat","_s","userId","setUserId","username","setUsername","selectedUser","setSelectedUser","messages","setMessages","unreadMessages","setUnreadMessages","socket","setSocket","newSocket","on","senderId","message","threadId","prevMessages","updatedMessages","threadIndex","findIndex","thread","push","disconnect","handleLogin","emit","sendMessage","messageInput","trim","setMessageInput","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","onClick","style","marginRight","display","marginBottom","border","padding","cursor","flexGrow","alignItems","justifyContent","color","marginLeft","backgroundColor","height","overflow","flexDirection","index","messageIndex","alignSelf","margin","borderRadius","maxWidth","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/SPORTSWEBAPP/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nconst ENDPOINT = \"http://localhost:3001\"; // Update with your server URL\r\n\r\nconst users = [\r\n  { id: \"jane\", name: \"Jane\" },\r\n  { id: \"kush\", name: \"Kush\" },\r\n  { id: \"winnie\", name: \"Winnie\" },\r\n  { id: \"james\", name: \"James\" },\r\n  // Add more users as needed\r\n];\r\n\r\nconst Chat = () => {\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [unreadMessages, setUnreadMessages] = useState(0);\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const newSocket = socketIOClient(ENDPOINT);\r\n    setSocket(newSocket);\r\n\r\n    newSocket.on(\"receive-message\", ({ senderId, message, threadId }) => {\r\n      if (senderId !== userId) {\r\n        setUnreadMessages(unreadMessages + 1);\r\n      }\r\n\r\n      setMessages((prevMessages) => {\r\n        const updatedMessages = [...prevMessages];\r\n        const threadIndex = updatedMessages.findIndex(\r\n          (thread) => thread.threadId === threadId\r\n        );\r\n\r\n        if (threadIndex === -1) {\r\n          updatedMessages.push({ threadId, messages: [message] });\r\n        } else {\r\n          updatedMessages[threadIndex].messages.push(message);\r\n        }\r\n\r\n        return updatedMessages;\r\n      });\r\n    });\r\n\r\n    return () => newSocket.disconnect();\r\n  }, []);\r\n\r\n  const handleLogin = (id, name) => {\r\n    setUserId(id);\r\n    setUsername(name);\r\n    setMessages([]);\r\n    setUnreadMessages(0);\r\n    setSelectedUser(null);\r\n    socket.emit(\"login\", id);\r\n  };\r\n\r\n  const sendMessage = (threadId) => {\r\n    if (socket && messageInput.trim() !== \"\") {\r\n      socket.emit(\"send-message\", {\r\n        senderId: userId,\r\n        threadId,\r\n        message: messageInput,\r\n      });\r\n      setMessages((prevMessages) => {\r\n        const updatedMessages = [...prevMessages];\r\n        const threadIndex = updatedMessages.findIndex(\r\n          (thread) => thread.threadId === threadId\r\n        );\r\n\r\n        if (threadIndex === -1) {\r\n          updatedMessages.push({ threadId, messages: [messageInput] });\r\n        } else {\r\n          updatedMessages[threadIndex].messages.push(messageInput);\r\n        }\r\n\r\n        return updatedMessages;\r\n      });\r\n      setMessageInput(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome, {username || \"Guest\"}!</h1>\r\n      {!userId && (\r\n        <div>\r\n          {users.map((user) => (\r\n            <button\r\n              key={user.id}\r\n              onClick={() => handleLogin(user.id, user.name)}\r\n              style={{ marginRight: \"10px\" }}\r\n            >\r\n              Login as {user.name}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n      {userId && (\r\n        <div>\r\n          <div style={{ display: \"flex\", marginBottom: \"10px\" }}>\r\n            {users.map((user) => (\r\n              <div\r\n                key={user.id}\r\n                style={{\r\n                  border: \"1px solid #ccc\",\r\n                  padding: \"10px\",\r\n                  marginRight: \"10px\",\r\n                  cursor: \"pointer\",\r\n                  flexGrow: 1,\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n                onClick={() => {\r\n                  if (user.id !== userId){\r\n                    setSelectedUser(user);\r\n                    setMessages([]);\r\n                    socket.emit(\"start-conversation\", user.id);\r\n                  }\r\n                }}\r\n              >\r\n                <div>\r\n                  {user.name}\r\n                  {user.id === selectedUser?.id && (\r\n                    <span style={{ color: \"green\", marginLeft: \"10px\" }}>\r\n                      (Online)\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  {user.id === selectedUser?.id && (\r\n                    <span style={{ backgroundColor: \"red\", color: \"white\", padding: \"5px\" }}>\r\n                      {unreadMessages > 0 && unreadMessages}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div\r\n            style={{\r\n              height: \"300px\",\r\n              overflow: \"auto\",\r\n              border: \"1px solid #ccc\",\r\n              marginBottom: \"10px\",\r\n            }}\r\n          >\r\n            {selectedUser && (\r\n              <div style={{ display: \"flex\", flexDirection: \"column-reverse\" }}>\r\n                {messages.map((thread, index) =>\r\n                  thread.messages.map((message, messageIndex) => (\r\n                    <div\r\n                      key={`${thread.threadId}-${messageIndex}`}\r\n                      style={{\r\n                        alignSelf:\r\n                          thread.threadId === selectedUser.id\r\n                            ? \"flex-end\"\r\n                            : \"flex-start\",\r\n                        margin: \"5px\",\r\n                        borderRadius: \"10px\",\r\n                        padding: \"10px\",\r\n                        maxWidth: \"60%\",\r\n                        backgroundColor:\r\n                          thread.threadId === selectedUser.id\r\n                            ? \"#dcf8c6\"\r\n                            : \"#f5f5f5\",\r\n                      }}\r\n                    >\r\n                      {message}\r\n                    </div>\r\n                  ))\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n          {selectedUser && (\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                value={messageInput}\r\n                onChange={(e) => setMessageInput(e.target.value)}\r\n                placeholder=\"Type your message...\"\r\n              />\r\n              <button onClick={() => sendMessage(selectedUser.id)}>Send</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}