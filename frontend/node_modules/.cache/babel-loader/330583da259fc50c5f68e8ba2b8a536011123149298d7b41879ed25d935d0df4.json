{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\SPORTSWEBAPP\\\\frontend\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComments, faUser, faUsers, faPaperPlane } from '@fortawesome/free-solid-svg-icons';\nimport io from 'socket.io-client';\nimport '../styles/ChatRoom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = ({\n  username,\n  room\n}) => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    const newSocket = io(\"http://localhost:3020\");\n    setSocket(newSocket);\n    newSocket.emit('joinRoom', {\n      username,\n      room\n    });\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [username, room]);\n  useEffect(() => {\n    if (!socket) return;\n    socket.on('message', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n    socket.on('roomUsers', ({\n      users\n    }) => {\n      setUsers(users);\n    });\n\n    // Handle leave room event\n    socket.on('userLeft', leftUsername => {\n      setMessages(prevMessages => [...prevMessages, {\n        username: 'Server',\n        text: `${leftUsername} has left the room`,\n        time: new Date().toLocaleTimeString()\n      }]);\n      setUsers(prevUsers => prevUsers.filter(user => user.username !== leftUsername));\n    });\n  }, [socket]);\n  const sendMessage = msg => {\n    if (socket) {\n      const messageData = {\n        username: username,\n        text: msg\n      };\n      socket.emit('chatMessage', messageData);\n    }\n  };\n  const leaveChatRoom = () => {\n    const leaveRoom = window.confirm('Are you sure you want to leave the chatroom?');\n    if (leaveRoom) {\n      window.location = '../index.html';\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const msg = e.target.elements.msg.value.trim();\n    if (msg) {\n      sendMessage(msg);\n      e.target.elements.msg.value = '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatroom\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatroom-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-smile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 31\n        }, this), \" ChatRoom\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: leaveChatRoom,\n        className: \"leave-btn\",\n        children: \"Leave Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatroom-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatroom-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-header\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faUser,\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"username\",\n            children: \"Current User:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-user\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"username\",\n            children: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-header\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faUsers,\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"users-header\",\n            children: \"users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"room-users\",\n          children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faUser,\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"username\",\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatroom-messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"username\",\n              children: message.username === username ? 'You' : message.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"time\",\n              children: message.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatroom-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"chat-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"msg\",\n          type: \"text\",\n          placeholder: \"Enter Message\",\n          autoComplete: \"off\",\n          name: \"msg\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-btn\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPaperPlane,\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"HKs3uvz/fLJY6fgewI0RHPcckhE=\");\n_c = ChatRoom;\nexport default ChatRoom;\n{/*import React, { useEffect, useState } from 'react';\r\n import io from 'socket.io-client';\r\n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n import { faComments, faUser, faUsers } from '@fortawesome/free-solid-svg-icons'; // Import Font Awesome icons\r\n import '../styles/ChatRoom.css';\r\n \n const ChatRoom = ({ username, room }) => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n \n  useEffect(() => {\r\n    const newSocket = io(\"http://localhost:3020\");\r\n    setSocket(newSocket);\r\n \n    newSocket.emit('joinRoom', { username, room });\r\n \n    return () => {\r\n      newSocket.disconnect();\r\n    };\r\n  }, [username, room]);\r\n \n  useEffect(() => {\r\n    if (!socket) return;\r\n \n    socket.on('message', (message) => {\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n \n    socket.on('roomUsers', ({ users }) => {\r\n      setUsers(users);\r\n    });\r\n \n    // Handle leave room event\r\n    socket.on('userLeft', (leftUsername) => {\r\n      setMessages((prevMessages) => [\r\n        ...prevMessages,\r\n        { username: 'Server', text: `${leftUsername} has left the room`, time: new Date().toLocaleTimeString() },\r\n      ]);\r\n      setUsers((prevUsers) => prevUsers.filter(user => user.username !== leftUsername));\r\n    });\r\n  }, [socket]);\r\n \n  const sendMessage = (msg) => {\r\n    if (socket) {\r\n      const messageData = {\r\n        username: username, \r\n        text: msg\r\n      };\r\n      socket.emit('chatMessage', messageData);\r\n    }\r\n  };\r\n \n  const leaveChatRoom = () => {\r\n    const leaveRoom = window.confirm('Are you sure you want to leave the chatroom?');\r\n    if (leaveRoom) {\r\n      window.location = '../index.html';\r\n    }\r\n  };\r\n \n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const msg = e.target.elements.msg.value.trim();\r\n    if (msg) {\r\n      sendMessage(msg);\r\n      e.target.elements.msg.value = '';\r\n    }\r\n  };\r\n \n  return (\r\n    <div className=\"chat-container\">\r\n      <header className=\"chat-header\">\r\n        <h1><i className=\"fas fa-smile\"></i> ChatRoom</h1>\r\n        <button onClick={leaveChatRoom} className=\"btn\">Leave Room</button>\r\n      </header>\r\n      <main className=\"chat-main\">\r\n        <div className=\"chat-sidebar\">\r\n          <h3><FontAwesomeIcon icon={faComments} /> Room Name:</h3>\r\n          <h2>{room}</h2>\r\n          <h3><FontAwesomeIcon icon={faUser} /> Current User:</h3>\r\n          <p>{username}</p>\r\n          <h3><FontAwesomeIcon icon={faUsers} /> users</h3>\r\n          <ul>\r\n            {users.map((user, index) => (\r\n              <li key={index}>\r\n                <FontAwesomeIcon icon={faUser} />\r\n                {user.username}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"chat-messages\">\r\n          {messages.map((message, index) => (\r\n            <div key={index} className=\"message\">\r\n              <p className=\"meta\">{message.username === username ? 'You' : message.username} <span>{message.time}</span></p>\r\n              <p className=\"text\">{message.text}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </main>\r\n      <div className=\"chat-form-container\">\r\n        <form id=\"chat-form\" onSubmit={handleSubmit}>\r\n          <input\r\n            id=\"msg\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Message\"\r\n            autoComplete=\"off\"\r\n            name=\"msg\"\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"btn\"><i className=\"fas fa-paper-plane\"></i> Send</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n };\r\n \n export default ChatRoom;*/}\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faComments","faUser","faUsers","faPaperPlane","io","jsxDEV","_jsxDEV","ChatRoom","username","room","_s","socket","setSocket","messages","setMessages","users","setUsers","newSocket","emit","disconnect","on","message","prevMessages","leftUsername","text","time","Date","toLocaleTimeString","prevUsers","filter","user","sendMessage","msg","messageData","leaveChatRoom","leaveRoom","window","confirm","location","handleSubmit","e","preventDefault","target","elements","value","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","map","index","id","onSubmit","type","placeholder","autoComplete","name","required","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/SPORTSWEBAPP/frontend/src/components/ChatRoom.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faComments, faUser, faUsers, faPaperPlane } from '@fortawesome/free-solid-svg-icons';\r\nimport io from 'socket.io-client';\r\nimport '../styles/ChatRoom.css';\r\n\r\nconst ChatRoom = ({ username, room }) => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const newSocket = io(\"http://localhost:3020\");\r\n    setSocket(newSocket);\r\n\r\n    newSocket.emit('joinRoom', { username, room });\r\n\r\n    return () => {\r\n      newSocket.disconnect();\r\n    };\r\n  }, [username, room]);\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    socket.on('message', (message) => {\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n\r\n    socket.on('roomUsers', ({ users }) => {\r\n      setUsers(users);\r\n    });\r\n\r\n    // Handle leave room event\r\n    socket.on('userLeft', (leftUsername) => {\r\n      setMessages((prevMessages) => [\r\n        ...prevMessages,\r\n        { username: 'Server', text: `${leftUsername} has left the room`, time: new Date().toLocaleTimeString() },\r\n      ]);\r\n      setUsers((prevUsers) => prevUsers.filter(user => user.username !== leftUsername));\r\n    });\r\n  }, [socket]);\r\n\r\n  const sendMessage = (msg) => {\r\n    if (socket) {\r\n      const messageData = {\r\n        username: username,\r\n        text: msg\r\n      };\r\n      socket.emit('chatMessage', messageData);\r\n    }\r\n  };\r\n\r\n  const leaveChatRoom = () => {\r\n    const leaveRoom = window.confirm('Are you sure you want to leave the chatroom?');\r\n    if (leaveRoom) {\r\n      window.location = '../index.html';\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const msg = e.target.elements.msg.value.trim();\r\n    if (msg) {\r\n      sendMessage(msg);\r\n      e.target.elements.msg.value = '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatroom\">\r\n      <div className=\"chatroom-header\">\r\n        <h1 className=\"title\"><i className=\"fas fa-smile\"></i> ChatRoom</h1>\r\n        <button onClick={leaveChatRoom} className=\"leave-btn\">Leave Room</button>\r\n      </div>\r\n      <div className=\"chatroom-main\">\r\n        <div className=\"chatroom-sidebar\">\r\n          <div className=\"sidebar-header\">\r\n            <FontAwesomeIcon icon={faUser} className=\"icon\" />\r\n            <span className=\"username\">Current User:</span>\r\n          </div>\r\n          <div className=\"current-user\">\r\n            <span className=\"username\">{username}</span>\r\n          </div>\r\n          <div className=\"sidebar-header\">\r\n            <FontAwesomeIcon icon={faUsers} className=\"icon\" />\r\n            <span className=\"users-header\">users</span>\r\n          </div>\r\n          <ul className=\"room-users\">\r\n            {users.map((user, index) => (\r\n              <li key={index}>\r\n                <FontAwesomeIcon icon={faUser} className=\"icon\" />\r\n                <span className=\"username\">{user.username}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"chatroom-messages\">\r\n          {messages.map((message, index) => (\r\n            <div key={index} className=\"message\">\r\n              <p className=\"meta\">\r\n                <span className=\"username\">\r\n                  {message.username === username ? 'You' : message.username}\r\n                </span>\r\n                <span className=\"time\">{message.time}</span>\r\n              </p>\r\n              <p className=\"text\">{message.text}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"chatroom-form-container\">\r\n        <form id=\"chat-form\" onSubmit={handleSubmit}>\r\n          <input id=\"msg\" type=\"text\" placeholder=\"Enter Message\" autoComplete=\"off\" name=\"msg\" required />\r\n          <button type=\"submit\" className=\"send-btn\">\r\n            <FontAwesomeIcon icon={faPaperPlane} className=\"icon\" />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*import React, { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faComments, faUser, faUsers } from '@fortawesome/free-solid-svg-icons'; // Import Font Awesome icons\r\nimport '../styles/ChatRoom.css';\r\n\r\nconst ChatRoom = ({ username, room }) => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const newSocket = io(\"http://localhost:3020\");\r\n    setSocket(newSocket);\r\n\r\n    newSocket.emit('joinRoom', { username, room });\r\n\r\n    return () => {\r\n      newSocket.disconnect();\r\n    };\r\n  }, [username, room]);\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    socket.on('message', (message) => {\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n\r\n    socket.on('roomUsers', ({ users }) => {\r\n      setUsers(users);\r\n    });\r\n\r\n    // Handle leave room event\r\n    socket.on('userLeft', (leftUsername) => {\r\n      setMessages((prevMessages) => [\r\n        ...prevMessages,\r\n        { username: 'Server', text: `${leftUsername} has left the room`, time: new Date().toLocaleTimeString() },\r\n      ]);\r\n      setUsers((prevUsers) => prevUsers.filter(user => user.username !== leftUsername));\r\n    });\r\n  }, [socket]);\r\n\r\n  const sendMessage = (msg) => {\r\n    if (socket) {\r\n      const messageData = {\r\n        username: username, \r\n        text: msg\r\n      };\r\n      socket.emit('chatMessage', messageData);\r\n    }\r\n  };\r\n\r\n  const leaveChatRoom = () => {\r\n    const leaveRoom = window.confirm('Are you sure you want to leave the chatroom?');\r\n    if (leaveRoom) {\r\n      window.location = '../index.html';\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const msg = e.target.elements.msg.value.trim();\r\n    if (msg) {\r\n      sendMessage(msg);\r\n      e.target.elements.msg.value = '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <header className=\"chat-header\">\r\n        <h1><i className=\"fas fa-smile\"></i> ChatRoom</h1>\r\n        <button onClick={leaveChatRoom} className=\"btn\">Leave Room</button>\r\n      </header>\r\n      <main className=\"chat-main\">\r\n        <div className=\"chat-sidebar\">\r\n          <h3><FontAwesomeIcon icon={faComments} /> Room Name:</h3>\r\n          <h2>{room}</h2>\r\n          <h3><FontAwesomeIcon icon={faUser} /> Current User:</h3>\r\n          <p>{username}</p>\r\n          <h3><FontAwesomeIcon icon={faUsers} /> users</h3>\r\n          <ul>\r\n            {users.map((user, index) => (\r\n              <li key={index}>\r\n                <FontAwesomeIcon icon={faUser} />\r\n                {user.username}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"chat-messages\">\r\n          {messages.map((message, index) => (\r\n            <div key={index} className=\"message\">\r\n              <p className=\"meta\">{message.username === username ? 'You' : message.username} <span>{message.time}</span></p>\r\n              <p className=\"text\">{message.text}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </main>\r\n      <div className=\"chat-form-container\">\r\n        <form id=\"chat-form\" onSubmit={handleSubmit}>\r\n          <input\r\n            id=\"msg\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Message\"\r\n            autoComplete=\"off\"\r\n            name=\"msg\"\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"btn\"><i className=\"fas fa-paper-plane\"></i> Send</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;*/}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}