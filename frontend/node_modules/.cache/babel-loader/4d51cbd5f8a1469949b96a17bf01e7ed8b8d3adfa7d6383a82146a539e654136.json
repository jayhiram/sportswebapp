{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\SPORTSWEBAPP\\\\frontend\\\\src\\\\components\\\\NewPassword.js\",\n  _s = $RefreshSig$();\n// NewPassword.js\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom'; // Import useParams to retrieve token from URL params\nimport '../styles/NewPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPassword = () => {\n  _s();\n  const {\n    token\n  } = useParams(); // Retrieve token from URL params\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleSubmitPassword = () => {\n    // Perform form validation\n    if (!email.includes('@')) {\n      setErrorMessage('Invalid email format');\n      return;\n    }\n    if (password.length < 8) {\n      setErrorMessage('Password must be at least 8 characters long');\n      return;\n    }\n    if (password !== confirmPassword) {\n      setErrorMessage('Passwords do not match');\n      return;\n    }\n\n    // Perform logic to update user's password using the provided token and email\n    console.log('Updating password...');\n    console.log('Email:', email);\n    console.log('Token:', token);\n    console.log('New Password:', password);\n    // Here, you would send a request to your server to update the user's password using the provided token and email\n\n    // Optionally, you can redirect the user to the login page after successful password reset\n    // history.push('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Set New Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter your email and new password below.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"New Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmitPassword,\n      children: \"Set Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPassword, \"prR2tlK3C1eUPzH0W4STInm1m1E=\", false, function () {\n  return [useParams];\n});\n_c = NewPassword;\nexport default NewPassword;\nvar _c;\n$RefreshReg$(_c, \"NewPassword\");","map":{"version":3,"names":["React","useState","useParams","jsxDEV","_jsxDEV","NewPassword","_s","token","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","handleSubmitPassword","includes","length","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/SPORTSWEBAPP/frontend/src/components/NewPassword.js"],"sourcesContent":["// NewPassword.js\r\nimport React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom'; // Import useParams to retrieve token from URL params\r\nimport '../styles/NewPassword.css';\r\n\r\nconst NewPassword = () => {\r\n  const { token } = useParams(); // Retrieve token from URL params\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleSubmitPassword = () => {\r\n    // Perform form validation\r\n    if (!email.includes('@')) {\r\n      setErrorMessage('Invalid email format');\r\n      return;\r\n    }\r\n    if (password.length < 8) {\r\n      setErrorMessage('Password must be at least 8 characters long');\r\n      return;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      setErrorMessage('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    // Perform logic to update user's password using the provided token and email\r\n    console.log('Updating password...');\r\n    console.log('Email:', email);\r\n    console.log('Token:', token);\r\n    console.log('New Password:', password);\r\n    // Here, you would send a request to your server to update the user's password using the provided token and email\r\n\r\n    // Optionally, you can redirect the user to the login page after successful password reset\r\n    // history.push('/login');\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-password-container\">\r\n      <h2>Set New Password</h2>\r\n      <p>Enter your email and new password below.</p>\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"New Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Confirm Password\"\r\n        value={confirmPassword}\r\n        onChange={(e) => setConfirmPassword(e.target.value)}\r\n      />\r\n      <button onClick={handleSubmitPassword}>Set Password</button>\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}