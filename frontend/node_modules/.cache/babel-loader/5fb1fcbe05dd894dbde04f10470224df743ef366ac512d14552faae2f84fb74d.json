{"ast":null,"code":"/**\n * Module dependencies.\n */\n\nvar transports = require('./transports');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parsejson = require('parsejson');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Noop function.\n *\n * @api private\n */\n\nfunction noop() {}\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket(uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n  opts = opts || {};\n  if (uri && 'object' == typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n  if (uri) {\n    uri = parseuri(uri);\n    opts.host = uri.host;\n    opts.secure = uri.protocol == 'https' || uri.protocol == 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  }\n  this.secure = null != opts.secure ? opts.secure : global.location && 'https:' == location.protocol;\n  if (opts.host) {\n    var pieces = opts.host.split(':');\n    opts.hostname = pieces.shift();\n    if (pieces.length) opts.port = pieces.pop();\n  }\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname || (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port ? location.port : this.secure ? 443 : 80);\n  this.query = opts.query || {};\n  if ('string' == typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.forceBase64 = !!opts.forceBase64;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.callbackBuffer = [];\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.open();\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n}\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n  var transport = new transports[name]({\n    agent: this.agent,\n    hostname: this.hostname,\n    port: this.port,\n    secure: this.secure,\n    path: this.path,\n    query: query,\n    forceJSONP: this.forceJSONP,\n    forceBase64: this.forceBase64,\n    timestampRequests: this.timestampRequests,\n    timestampParam: this.timestampParam,\n    policyPort: this.policyPort,\n    socket: this\n  });\n  return transport;\n};\nfunction clone(obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') != -1) {\n    transport = 'websocket';\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n  var transport = this.createTransport(transport);\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport.on('drain', function () {\n    self.onDrain();\n  }).on('packet', function (packet) {\n    self.onPacket(packet);\n  }).on('error', function (e) {\n    self.onError(e);\n  }).on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, {\n      probe: 1\n    }),\n    failed = false,\n    self = this;\n  Socket.priorWebsocketSuccess = false;\n  function onTransportOpen() {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{\n      type: 'ping',\n      data: 'probe'\n    }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' == msg.type && 'probe' == msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        Socket.priorWebsocketSuccess = 'websocket' == transport.name;\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' == self.readyState || 'closing' == self.readyState) {\n            return;\n          }\n          debug('changing transport and sending upgrade packet');\n          cleanup();\n          self.setTransport(transport);\n          transport.send([{\n            type: 'upgrade'\n          }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n  function freezeTransport() {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n    cleanup();\n    transport.close();\n    transport = null;\n  }\n\n  //Handle any error that happens while probing\n  function onerror(err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n    freezeTransport();\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n    self.emit('upgradeError', error);\n  }\n  function onTransportClose() {\n    onerror(\"transport closed\");\n  }\n\n  //When the socket is closed while we're probing\n  function onclose() {\n    onerror(\"socket closed\");\n  }\n\n  //When the socket is upgraded while we're probing\n  function onupgrade(to) {\n    if (transport && to.name != transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  //Remove all listeners on the transport and on self\n  function cleanup() {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' == this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' == this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(parsejson(packet.data));\n        break;\n      case 'pong':\n        this.setPing();\n        break;\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.emit('error', err);\n        break;\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' == this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' == self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || self.pingInterval + self.pingTimeout);\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api public\n*/\n\nSocket.prototype.ping = function () {\n  this.sendPacket('ping');\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  for (var i = 0; i < this.prevBufferLen; i++) {\n    if (this.callbackBuffer[i]) {\n      this.callbackBuffer[i]();\n    }\n  }\n  this.writeBuffer.splice(0, this.prevBufferLen);\n  this.callbackBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n  if (this.writeBuffer.length == 0) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' != this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write = Socket.prototype.send = function (msg, fn) {\n  this.sendPacket('message', msg, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, fn) {\n  var packet = {\n    type: type,\n    data: data\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  this.callbackBuffer.push(fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    this.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    this.transport.close();\n  }\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // clean buffers in next tick, so developers can still\n    // grab the buffers on `close` event\n    setTimeout(function () {\n      self.writeBuffer = [];\n      self.callbackBuffer = [];\n      self.prevBufferLen = 0;\n    }, 0);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};","map":{"version":3,"names":["transports","require","Emitter","debug","index","parser","parseuri","parsejson","parseqs","module","exports","Socket","noop","uri","opts","host","secure","protocol","port","query","global","location","pieces","split","hostname","shift","length","pop","agent","decode","upgrade","path","replace","forceJSONP","forceBase64","timestampParam","timestampRequests","readyState","writeBuffer","callbackBuffer","policyPort","rememberUpgrade","open","binaryType","onlyBinaryUpgrades","priorWebsocketSuccess","prototype","Transport","createTransport","name","clone","EIO","transport","id","sid","socket","obj","o","i","hasOwnProperty","indexOf","setTransport","self","removeAllListeners","on","onDrain","packet","onPacket","e","onError","onClose","probe","failed","onTransportOpen","upgradeLosesBinary","supportsBinary","send","type","data","once","msg","upgrading","emit","pause","cleanup","flush","err","Error","freezeTransport","close","onerror","error","onTransportClose","onclose","onupgrade","to","removeListener","onOpen","l","upgrades","onHandshake","setPing","code","filterUpgrades","pingInterval","pingTimeout","onHeartbeat","timeout","clearTimeout","pingTimeoutTimer","setTimeout","pingIntervalTimer","ping","sendPacket","prevBufferLen","splice","writable","write","fn","push","reason","desc","filteredUpgrades","j"],"sources":["C:/Users/Admin/Desktop/SPORTSWEBAPP/frontend/node_modules/engine.io-client/lib/socket.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nvar transports = require('./transports');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parsejson = require('parsejson');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Noop function.\n *\n * @api private\n */\n\nfunction noop(){}\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket(uri, opts){\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' == typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.host = uri.host;\n    opts.secure = uri.protocol == 'https' || uri.protocol == 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  }\n\n  this.secure = null != opts.secure ? opts.secure :\n    (global.location && 'https:' == location.protocol);\n\n  if (opts.host) {\n    var pieces = opts.host.split(':');\n    opts.hostname = pieces.shift();\n    if (pieces.length) opts.port = pieces.pop();\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port ?\n       location.port :\n       (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' == typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.forceBase64 = !!opts.forceBase64;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.callbackBuffer = [];\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.open();\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    agent: this.agent,\n    hostname: this.hostname,\n    port: this.port,\n    secure: this.secure,\n    path: this.path,\n    query: query,\n    forceJSONP: this.forceJSONP,\n    forceBase64: this.forceBase64,\n    timestampRequests: this.timestampRequests,\n    timestampParam: this.timestampParam,\n    policyPort: this.policyPort,\n    socket: this\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') != -1) {\n    transport = 'websocket';\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n  var transport = this.createTransport(transport);\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function(transport){\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function(){\n    self.onDrain();\n  })\n  .on('packet', function(packet){\n    self.onPacket(packet);\n  })\n  .on('error', function(e){\n    self.onError(e);\n  })\n  .on('close', function(){\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 })\n    , failed = false\n    , self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen(){\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' == msg.type && 'probe' == msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        Socket.priorWebsocketSuccess = 'websocket' == transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' == self.readyState || 'closing' == self.readyState) {\n            return;\n          }\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport() {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  //Handle any error that happens while probing\n  function onerror(err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose(){\n    onerror(\"transport closed\");\n  }\n\n  //When the socket is closed while we're probing\n  function onclose(){\n    onerror(\"socket closed\");\n  }\n\n  //When the socket is upgraded while we're probing\n  function onupgrade(to){\n    if (transport && to.name != transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  //Remove all listeners on the transport and on self\n  function cleanup(){\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' == this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' == this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(parsejson(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.emit('error', err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if  ('closed' == this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' == self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api public\n*/\n\nSocket.prototype.ping = function () {\n  this.sendPacket('ping');\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function() {\n  for (var i = 0; i < this.prevBufferLen; i++) {\n    if (this.callbackBuffer[i]) {\n      this.callbackBuffer[i]();\n    }\n  }\n\n  this.writeBuffer.splice(0, this.prevBufferLen);\n  this.callbackBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (this.writeBuffer.length == 0) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' != this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, fn) {\n  this.sendPacket('message', msg, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, fn) {\n  var packet = { type: type, data: data };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  this.callbackBuffer.push(fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    this.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    this.transport.close();\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // clean buffers in next tick, so developers can still\n    // grab the buffers on `close` event\n    setTimeout(function() {\n      self.writeBuffer = [];\n      self.callbackBuffer = [];\n      self.prevBufferLen = 0;\n    }, 0);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i<j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}