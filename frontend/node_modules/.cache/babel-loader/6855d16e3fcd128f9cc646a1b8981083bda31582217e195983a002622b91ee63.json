{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\SPORTSWEBAPP\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = 'http://localhost:3001'; // Update with your server URL\n\nconst users = [{\n  id: 'jane',\n  name: 'Jane'\n}, {\n  id: 'kush',\n  name: 'Kush'\n}, {\n  id: 'winnie',\n  name: 'Winnie'\n}, {\n  id: 'james',\n  name: 'James'\n}\n// Add more users as needed\n];\nconst App = () => {\n  _s();\n  const [userId, setUserId] = useState('');\n  const [username, setUsername] = useState('');\n  const [messageInput, setMessageInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [notificationCount, setNotificationCount] = useState(0);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const newSocket = socketIOClient(ENDPOINT);\n    setSocket(newSocket);\n    newSocket.on('receive-message', ({\n      senderId,\n      message\n    }) => {\n      console.log('Message received:', senderId, message);\n      setMessages(prevMessages => [...prevMessages, {\n        senderId,\n        message\n      }]);\n      setNotificationCount(prevCount => prevCount + 1);\n    });\n    newSocket.on('notification', () => {\n      setNotificationCount(prevCount => prevCount + 1);\n    });\n    return () => newSocket.disconnect();\n  }, []);\n  const handleLogin = (id, name) => {\n    setUserId(id);\n    setUsername(name);\n    setMessages([]); // Clear messages when logging in\n    setNotificationCount(0); // Reset notification count when logging in\n    setMessages([]); // Reset messages when logging in\n    setSelectedUser(null); // Reset selected user when logging in\n    socket.emit('login', id);\n  };\n  const handleMessageInputChange = e => {\n    setMessageInput(e.target.value);\n  };\n  const sendMessage = () => {\n    if (socket && selectedUser && messageInput.trim() !== '') {\n      socket.emit('send-message', {\n        senderId: userId,\n        recipientId: selectedUser.id,\n        message: messageInput\n      });\n      setMessages(prevMessages => [...prevMessages, {\n        senderId: userId,\n        message: messageInput\n      }]);\n      setMessageInput('');\n    }\n  };\n  const selectUser = user => {\n    setSelectedUser(user);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", username || 'Guest', \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), !userId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLogin(user.id, user.name),\n        children: [\"Login as \", user.name]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), userId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [selectedUser && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Chatting with: \", selectedUser.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 30\n        }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [msg.senderId === userId ? 'You: ' : `${selectedUser.name}: `, msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => selectUser(user),\n          disabled: user.id === userId,\n          children: user.name\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: messageInput,\n        onChange: handleMessageInputChange,\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Notifications: \", notificationCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8nA3THKPyJ5esRAZ2HKkt1k+zmQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","socketIOClient","jsxDEV","_jsxDEV","ENDPOINT","users","id","name","App","_s","userId","setUserId","username","setUsername","messageInput","setMessageInput","messages","setMessages","selectedUser","setSelectedUser","notificationCount","setNotificationCount","socket","setSocket","newSocket","on","senderId","message","console","log","prevMessages","prevCount","disconnect","handleLogin","emit","handleMessageInputChange","e","target","value","sendMessage","trim","recipientId","selectUser","user","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","msg","index","disabled","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/SPORTSWEBAPP/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nconst ENDPOINT = 'http://localhost:3001'; // Update with your server URL\r\n\r\nconst users = [\r\n  { id: 'jane', name: 'Jane' },\r\n  { id: 'kush', name: 'Kush' },\r\n  { id: 'winnie', name: 'Winnie' },\r\n  { id: 'james', name: 'James' },\r\n  // Add more users as needed\r\n];\r\n\r\nconst App = () => {\r\n  const [userId, setUserId] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [messageInput, setMessageInput] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [notificationCount, setNotificationCount] = useState(0);\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const newSocket = socketIOClient(ENDPOINT);\r\n    setSocket(newSocket);\r\n\r\n    newSocket.on('receive-message', ({ senderId, message }) => {\r\n      console.log('Message received:', senderId, message);\r\n      setMessages(prevMessages => [...prevMessages, { senderId, message }]);\r\n      setNotificationCount(prevCount => prevCount + 1);\r\n    });\r\n\r\n    newSocket.on('notification', () => {\r\n      setNotificationCount(prevCount => prevCount + 1);\r\n    });\r\n\r\n    return () => newSocket.disconnect();\r\n  }, []);\r\n\r\n  const handleLogin = (id, name) => {\r\n    setUserId(id);\r\n    setUsername(name);\r\n    setMessages([]); // Clear messages when logging in\r\n    setNotificationCount(0); // Reset notification count when logging in\r\n    setMessages([]); // Reset messages when logging in\r\n    setSelectedUser(null); // Reset selected user when logging in\r\n    socket.emit('login', id);\r\n  };\r\n\r\n  const handleMessageInputChange = (e) => {\r\n    setMessageInput(e.target.value);\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (socket && selectedUser && messageInput.trim() !== '') {\r\n      socket.emit('send-message', { senderId: userId, recipientId: selectedUser.id, message: messageInput });\r\n      setMessages(prevMessages => [...prevMessages, { senderId: userId, message: messageInput }]);\r\n      setMessageInput('');\r\n    }\r\n  };\r\n\r\n  const selectUser = (user) => {\r\n    setSelectedUser(user);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome, {username || 'Guest'}!</h1>\r\n      {!userId && (\r\n        <div>\r\n          {users.map(user => (\r\n            <button key={user.id} onClick={() => handleLogin(user.id, user.name)}>Login as {user.name}</button>\r\n          ))}\r\n        </div>\r\n      )}\r\n      {userId && (\r\n        <div>\r\n          <div>\r\n            {selectedUser && <h2>Chatting with: {selectedUser.name}</h2>}\r\n            {messages.map((msg, index) => (\r\n              <div key={index}>\r\n                {msg.senderId === userId ? 'You: ' : `${selectedUser.name}: `}\r\n                {msg.message}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div>\r\n            {users.map(user => (\r\n              <button key={user.id} onClick={() => selectUser(user)} disabled={user.id === userId}>\r\n                {user.name}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            value={messageInput}\r\n            onChange={handleMessageInputChange}\r\n            placeholder=\"Type your message...\"\r\n          />\r\n          <button onClick={sendMessage}>Send</button>\r\n        </div>\r\n      )}\r\n      <div>\r\n        Notifications: {notificationCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}