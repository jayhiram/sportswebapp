{"ast":null,"code":"/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup(uri, opts) {\n  if (typeof uri == 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var io;\n  if (opts.forceNew || opts['force new connection'] || false === opts.multiplex) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  return io.socket(parsed.path);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');","map":{"version":3,"names":["url","require","parser","Manager","debug","module","exports","lookup","cache","managers","uri","opts","undefined","parsed","source","id","io","forceNew","multiplex","socket","path","protocol","connect","Socket"],"sources":["C:/Users/Admin/Desktop/SPORTSWEBAPP/frontend/node_modules/socket.io-client/lib/index.js"],"sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup(uri, opts) {\n  if (typeof uri == 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var io;\n\n  if (opts.forceNew || opts['force new connection'] || false === opts.multiplex) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n\n  return io.socket(parsed.path);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n"],"mappings":"AACA;AACA;AACA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC1B,IAAIC,MAAM,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIE,OAAO,GAAGF,OAAO,CAAC,WAAW,CAAC;AAClC,IAAIG,KAAK,GAAGH,OAAO,CAAC,OAAO,CAAC,CAAC,kBAAkB,CAAC;;AAEhD;AACA;AACA;;AAEAI,MAAM,CAACC,OAAO,GAAGA,OAAO,GAAGC,MAAM;;AAEjC;AACA;AACA;;AAEA,IAAIC,KAAK,GAAGF,OAAO,CAACG,QAAQ,GAAG,CAAC,CAAC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASF,MAAMA,CAACG,GAAG,EAAEC,IAAI,EAAE;EACzB,IAAI,OAAOD,GAAG,IAAI,QAAQ,EAAE;IAC1BC,IAAI,GAAGD,GAAG;IACVA,GAAG,GAAGE,SAAS;EACjB;EAEAD,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;EAEjB,IAAIE,MAAM,GAAGb,GAAG,CAACU,GAAG,CAAC;EACrB,IAAII,MAAM,GAAGD,MAAM,CAACC,MAAM;EAC1B,IAAIC,EAAE,GAAGF,MAAM,CAACE,EAAE;EAClB,IAAIC,EAAE;EAEN,IAAIL,IAAI,CAACM,QAAQ,IAAIN,IAAI,CAAC,sBAAsB,CAAC,IAAI,KAAK,KAAKA,IAAI,CAACO,SAAS,EAAE;IAC7Ed,KAAK,CAAC,8BAA8B,EAAEU,MAAM,CAAC;IAC7CE,EAAE,GAAGb,OAAO,CAACW,MAAM,EAAEH,IAAI,CAAC;EAC5B,CAAC,MAAM;IACL,IAAI,CAACH,KAAK,CAACO,EAAE,CAAC,EAAE;MACdX,KAAK,CAAC,wBAAwB,EAAEU,MAAM,CAAC;MACvCN,KAAK,CAACO,EAAE,CAAC,GAAGZ,OAAO,CAACW,MAAM,EAAEH,IAAI,CAAC;IACnC;IACAK,EAAE,GAAGR,KAAK,CAACO,EAAE,CAAC;EAChB;EAEA,OAAOC,EAAE,CAACG,MAAM,CAACN,MAAM,CAACO,IAAI,CAAC;AAC/B;;AAEA;AACA;AACA;AACA;AACA;;AAEAd,OAAO,CAACe,QAAQ,GAAGnB,MAAM,CAACmB,QAAQ;;AAElC;AACA;AACA;AACA;AACA;AACA;;AAEAf,OAAO,CAACgB,OAAO,GAAGf,MAAM;;AAExB;AACA;AACA;AACA;AACA;;AAEAD,OAAO,CAACH,OAAO,GAAGF,OAAO,CAAC,WAAW,CAAC;AACtCK,OAAO,CAACiB,MAAM,GAAGtB,OAAO,CAAC,UAAU,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}