{"ast":null,"code":"// server.js (Backend)\n\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst app = express();\nconst PORT = process.env.PORT || 5000;\n\n// Middleware\napp.use(bodyParser.json());\n\n// In-memory array to store events\nlet events = [];\n\n// Route to create a new event\napp.post('/api/events', (req, res) => {\n  const {\n    name,\n    date,\n    time,\n    location,\n    sport\n  } = req.body;\n  if (!name || !date || !time || !location || !sport) {\n    return res.status(400).json({\n      error: 'All fields are required'\n    });\n  }\n  const newEvent = {\n    id: events.length + 1,\n    name,\n    date,\n    time,\n    location,\n    sport\n  };\n  events.push(newEvent);\n  res.status(201).json(newEvent);\n});\n\n// Start the server\napp.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}`);\n});","map":{"version":3,"names":["express","require","bodyParser","app","PORT","process","env","use","json","events","post","req","res","name","date","time","location","sport","body","status","error","newEvent","id","length","push","listen","console","log"],"sources":["C:/Users/Admin/Desktop/SPORTSWEBAPP/frontend/src/components/Events.js"],"sourcesContent":["// server.js (Backend)\r\n\r\nconst express = require('express');\r\nconst bodyParser = require('body-parser');\r\n\r\nconst app = express();\r\nconst PORT = process.env.PORT || 5000;\r\n\r\n// Middleware\r\napp.use(bodyParser.json());\r\n\r\n// In-memory array to store events\r\nlet events = [];\r\n\r\n// Route to create a new event\r\napp.post('/api/events', (req, res) => {\r\n  const { name, date, time, location, sport } = req.body;\r\n\r\n  if (!name || !date || !time || !location || !sport) {\r\n    return res.status(400).json({ error: 'All fields are required' });\r\n  }\r\n\r\n  const newEvent = {\r\n    id: events.length + 1,\r\n    name,\r\n    date,\r\n    time,\r\n    location,\r\n    sport\r\n  };\r\n\r\n  events.push(newEvent);\r\n  res.status(201).json(newEvent);\r\n});\r\n\r\n// Start the server\r\napp.listen(PORT, () => {\r\n  console.log(`Server is running on port ${PORT}`);\r\n});\r\n"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAa,CAAC;AAEzC,MAAME,GAAG,GAAGH,OAAO,CAAC,CAAC;AACrB,MAAMI,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;;AAErC;AACAD,GAAG,CAACI,GAAG,CAACL,UAAU,CAACM,IAAI,CAAC,CAAC,CAAC;;AAE1B;AACA,IAAIC,MAAM,GAAG,EAAE;;AAEf;AACAN,GAAG,CAACO,IAAI,CAAC,aAAa,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACpC,MAAM;IAAEC,IAAI;IAAEC,IAAI;IAAEC,IAAI;IAAEC,QAAQ;IAAEC;EAAM,CAAC,GAAGN,GAAG,CAACO,IAAI;EAEtD,IAAI,CAACL,IAAI,IAAI,CAACC,IAAI,IAAI,CAACC,IAAI,IAAI,CAACC,QAAQ,IAAI,CAACC,KAAK,EAAE;IAClD,OAAOL,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACX,IAAI,CAAC;MAAEY,KAAK,EAAE;IAA0B,CAAC,CAAC;EACnE;EAEA,MAAMC,QAAQ,GAAG;IACfC,EAAE,EAAEb,MAAM,CAACc,MAAM,GAAG,CAAC;IACrBV,IAAI;IACJC,IAAI;IACJC,IAAI;IACJC,QAAQ;IACRC;EACF,CAAC;EAEDR,MAAM,CAACe,IAAI,CAACH,QAAQ,CAAC;EACrBT,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACX,IAAI,CAACa,QAAQ,CAAC;AAChC,CAAC,CAAC;;AAEF;AACAlB,GAAG,CAACsB,MAAM,CAACrB,IAAI,EAAE,MAAM;EACrBsB,OAAO,CAACC,GAAG,CAAE,6BAA4BvB,IAAK,EAAC,CAAC;AAClD,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}