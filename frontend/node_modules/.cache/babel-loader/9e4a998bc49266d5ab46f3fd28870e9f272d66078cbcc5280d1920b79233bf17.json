{"ast":null,"code":"/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar object = require('object-component');\nvar debug = require('debug')('socket.io-client:manager');\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager(uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && 'object' == typeof uri) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connected = 0;\n  this.attempts = 0;\n  this.encoding = false;\n  this.packetBuffer = [];\n  this.encoder = new parser.Encoder();\n  this.decoder = new parser.Decoder();\n  this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n  }\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  if (!this.openReconnect && !this.reconnecting && this._reconnection) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.openReconnect = true;\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open = Manager.prototype.connect = function (fn) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    }\n    self.maybeReconnectOnOpen();\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connect', function () {\n      self.connected++;\n    });\n  }\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  --this.connected || this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i]);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else {\n    // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  var sub;\n  while (sub = this.subs.shift()) sub.destroy();\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close = Manager.prototype.disconnect = function () {\n  this.skipReconnect = true;\n  this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('close');\n  this.cleanup();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting) return this;\n  var self = this;\n  this.attempts++;\n  if (this.attempts > this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.attempts * this.reconnectionDelay();\n    delay = Math.min(delay, this.reconnectionDelayMax());\n    debug('will wait %dms before reconnect attempt', delay);\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.attempts);\n      self.emitAll('reconnecting', self.attempts);\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.attempts;\n  this.attempts = 0;\n  this.reconnecting = false;\n  this.emitAll('reconnect', attempt);\n};","map":{"version":3,"names":["url","require","eio","Socket","Emitter","parser","on","bind","object","debug","module","exports","Manager","uri","opts","undefined","path","nsps","subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","timeout","readyState","connected","attempts","encoding","packetBuffer","encoder","Encoder","decoder","Decoder","open","prototype","emitAll","emit","apply","arguments","nsp","v","length","_reconnection","_reconnectionAttempts","_reconnectionDelay","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","openReconnect","reconnecting","reconnect","connect","fn","indexOf","engine","socket","self","openSub","onopen","errorSub","data","cleanup","err","Error","timer","setTimeout","destroy","close","push","clearTimeout","ondata","add","ondecoded","packet","onerror","encode","encodedPackets","i","write","processPacketQueue","pack","shift","sub","disconnect","skipReconnect","onclose","reason","delay","Math","min","onreconnect","attempt"],"sources":["C:/Users/Admin/Desktop/SPORTSWEBAPP/frontend/node_modules/socket.io-client/lib/manager.js"],"sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar object = require('object-component');\nvar debug = require('debug')('socket.io-client:manager');\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager(uri, opts){\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' == typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connected = 0;\n  this.attempts = 0;\n  this.encoding = false;\n  this.packetBuffer = [];\n  this.encoder = new parser.Encoder();\n  this.decoder = new parser.Decoder();\n  this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function() {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n  }\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function(v){\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function(v){\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function(v){\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function(v){\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function(v){\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function() {\n  if (!this.openReconnect && !this.reconnecting && this._reconnection) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.openReconnect = true;\n    this.reconnect();\n  }\n};\n\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function(fn){\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n\n  // emit `open`\n  var openSub = on(socket, 'open', function() {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function(data){\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    }\n\n    self.maybeReconnectOnOpen();\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function(){\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function(){\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function(){\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function(data){\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function(packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function(err){\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function(nsp){\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connect', function(){\n      self.connected++;\n    });\n  }\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function(socket){\n  --this.connected || this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function(packet){\n  debug('writing packet %j', packet);\n  var self = this;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function(encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i]);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function() {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function(){\n  var sub;\n  while (sub = this.subs.shift()) sub.destroy();\n\n  this.packetBuffer = [];\n  this.encoding = false;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function(){\n  this.skipReconnect = true;\n  this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function(reason){\n  debug('close');\n  this.cleanup();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function(){\n  if (this.reconnecting) return this;\n\n  var self = this;\n  this.attempts++;\n\n  if (this.attempts > this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.attempts * this.reconnectionDelay();\n    delay = Math.min(delay, this.reconnectionDelayMax());\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function(){\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.attempts);\n      self.emitAll('reconnecting', self.attempts);\n      self.open(function(err){\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function(){\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function(){\n  var attempt = this.attempts;\n  this.attempts = 0;\n  this.reconnecting = false;\n  this.emitAll('reconnect', attempt);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}