{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\SPORTSWEBAPP\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = 'http://localhost:5000'; // Update with your server URL\n\nconst users = [{\n  id: 'jane',\n  name: 'Jane'\n}, {\n  id: 'kush',\n  name: 'Kush'\n}, {\n  id: 'winnie',\n  name: 'Winnie'\n}, {\n  id: 'james',\n  name: 'James'\n}\n// Add more users as needed\n];\nconst App = () => {\n  _s();\n  var _users$find;\n  const [userId, setUserId] = useState('');\n  const [username, setUsername] = useState('');\n  const [messageInput, setMessageInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [notificationCount, setNotificationCount] = useState(0);\n  const [recipientId, setRecipientId] = useState('');\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const newSocket = socketIOClient(ENDPOINT);\n    setSocket(newSocket);\n    newSocket.on('receive-message', ({\n      senderId,\n      message\n    }) => {\n      console.log('Message received:', senderId, message);\n      setMessages(prevMessages => [...prevMessages, {\n        senderId,\n        message\n      }]);\n      setNotificationCount(prevCount => prevCount + 1);\n    });\n    return () => newSocket.disconnect();\n  }, []);\n  const handleLogin = (id, name) => {\n    setUserId(id);\n    setUsername(name);\n    setRecipientId(''); // Reset recipient when logging in\n    setMessages([]); // Clear messages when logging in\n    setNotificationCount(0); // Reset notification count when logging in\n    socket.emit('login', id);\n  };\n  const handleMessageInputChange = e => {\n    setMessageInput(e.target.value);\n  };\n  const sendMessage = () => {\n    if (socket && recipientId && messageInput.trim() !== '') {\n      socket.emit('send-message', {\n        senderId: userId,\n        recipientId,\n        message: messageInput\n      });\n      setMessages(prevMessages => [...prevMessages, {\n        senderId: userId,\n        message: messageInput\n      }]);\n      setMessageInput('');\n    }\n  };\n  const selectRecipient = id => {\n    setRecipientId(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", username || 'Guest', \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), !userId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLogin(user.id, user.name),\n        children: [\"Login as \", user.name]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), userId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [recipientId && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Chatting with: \", (_users$find = users.find(user => user.id === recipientId)) === null || _users$find === void 0 ? void 0 : _users$find.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this), messages.map((msg, index) => {\n          var _users$find2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [msg.senderId === userId ? 'You: ' : `${(_users$find2 = users.find(user => user.id === msg.senderId)) === null || _users$find2 === void 0 ? void 0 : _users$find2.name}: `, msg.message]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => selectRecipient(user.id),\n          children: user.name\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: messageInput,\n        onChange: handleMessageInputChange,\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Notifications: \", notificationCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Ucm05BTthGIKc78rRB8ITI8SB9k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","socketIOClient","jsxDEV","_jsxDEV","ENDPOINT","users","id","name","App","_s","_users$find","userId","setUserId","username","setUsername","messageInput","setMessageInput","messages","setMessages","notificationCount","setNotificationCount","recipientId","setRecipientId","socket","setSocket","newSocket","on","senderId","message","console","log","prevMessages","prevCount","disconnect","handleLogin","emit","handleMessageInputChange","e","target","value","sendMessage","trim","selectRecipient","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","onClick","find","msg","index","_users$find2","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/SPORTSWEBAPP/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nconst ENDPOINT = 'http://localhost:5000'; // Update with your server URL\r\n\r\nconst users = [\r\n  { id: 'jane', name: 'Jane' },\r\n  { id: 'kush', name: 'Kush' },\r\n  { id: 'winnie', name: 'Winnie' },\r\n  { id: 'james', name: 'James' },\r\n  // Add more users as needed\r\n];\r\n\r\nconst App = () => {\r\n  const [userId, setUserId] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [messageInput, setMessageInput] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [notificationCount, setNotificationCount] = useState(0);\r\n  const [recipientId, setRecipientId] = useState('');\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const newSocket = socketIOClient(ENDPOINT);\r\n    setSocket(newSocket);\r\n\r\n    newSocket.on('receive-message', ({ senderId, message }) => {\r\n      console.log('Message received:', senderId, message);\r\n      setMessages(prevMessages => [...prevMessages, { senderId, message }]);\r\n      setNotificationCount(prevCount => prevCount + 1);\r\n    });\r\n\r\n    return () => newSocket.disconnect();\r\n  }, []);\r\n\r\n  const handleLogin = (id, name) => {\r\n    setUserId(id);\r\n    setUsername(name);\r\n    setRecipientId(''); // Reset recipient when logging in\r\n    setMessages([]); // Clear messages when logging in\r\n    setNotificationCount(0); // Reset notification count when logging in\r\n    socket.emit('login', id);\r\n  };\r\n\r\n  const handleMessageInputChange = (e) => {\r\n    setMessageInput(e.target.value);\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (socket && recipientId && messageInput.trim() !== '') {\r\n      socket.emit('send-message', { senderId: userId, recipientId, message: messageInput });\r\n      setMessages(prevMessages => [...prevMessages, { senderId: userId, message: messageInput }]);\r\n      setMessageInput('');\r\n    }\r\n  };\r\n\r\n  const selectRecipient = (id) => {\r\n    setRecipientId(id);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome, {username || 'Guest'}!</h1>\r\n      {!userId && (\r\n        <div>\r\n          {users.map(user => (\r\n            <button key={user.id} onClick={() => handleLogin(user.id, user.name)}>Login as {user.name}</button>\r\n          ))}\r\n        </div>\r\n      )}\r\n      {userId && (\r\n        <div>\r\n          <div>\r\n            {recipientId && <h2>Chatting with: {users.find(user => user.id === recipientId)?.name}</h2>}\r\n            {messages.map((msg, index) => (\r\n              <div key={index}>\r\n                {msg.senderId === userId ? 'You: ' : `${users.find(user => user.id === msg.senderId)?.name}: `}\r\n                {msg.message}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div>\r\n            {users.map(user => (\r\n              <button key={user.id} onClick={() => selectRecipient(user.id)}>{user.name}</button>\r\n            ))}\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            value={messageInput}\r\n            onChange={handleMessageInputChange}\r\n            placeholder=\"Type your message...\"\r\n          />\r\n          <button onClick={sendMessage}>Send</button>\r\n        </div>\r\n      )}\r\n      <div>\r\n        Notifications: {notificationCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}