{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\SPORTSWEBAPP\\\\frontend\\\\src\\\\components\\\\Notificationbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBell } from '@fortawesome/free-solid-svg-icons';\nimport '../styles/Notificationbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notificationbar = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [showNotificationBox, setShowNotificationBox] = useState(false);\n  const [unreadNotifications, setUnreadNotifications] = useState(0);\n  useEffect(() => {\n    const socket = io('http://localhost:3009', {\n      transports: ['websocket']\n    });\n    socket.on('connect', () => {\n      console.log('WebSocket connection established');\n    });\n    socket.on('newRegistration', notification => {\n      // Check if the notification is for the current user\n      if (notification.socketId === socket.id) {\n        setNotifications(prevNotifications => [...prevNotifications, notification]);\n        setUnreadNotifications(prevUnreadNotifications => prevUnreadNotifications + 1);\n      }\n    });\n    socket.on('newEventCreated', notification => {\n      setNotifications(prevNotifications => [...prevNotifications, notification]);\n      setUnreadNotifications(prevUnreadNotifications => prevUnreadNotifications + 1);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const toggleNotificationBox = () => {\n    setShowNotificationBox(!showNotificationBox);\n    if (!showNotificationBox) {\n      setUnreadNotifications(0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        style: {\n          marginRight: '10px'\n        },\n        onClick: toggleNotificationBox,\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faBell,\n          className: \"iconimg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), unreadNotifications > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"counter\",\n          children: unreadNotifications\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), showNotificationBox && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-box\",\n      children: notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"notification-sender\",\n            children: \"Server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"notification-title\",\n            children: \"Registration of Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: notification.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"notification-timestamp\",\n          children: notification.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Notificationbar, \"cRduX9TefmjQfEl/Gjqc3OOpnoU=\");\n_c = Notificationbar;\nexport default Notificationbar;\nvar _c;\n$RefreshReg$(_c, \"Notificationbar\");","map":{"version":3,"names":["React","useState","useEffect","io","FontAwesomeIcon","faBell","jsxDEV","_jsxDEV","Notificationbar","_s","notifications","setNotifications","showNotificationBox","setShowNotificationBox","unreadNotifications","setUnreadNotifications","socket","transports","on","console","log","notification","socketId","id","prevNotifications","prevUnreadNotifications","disconnect","toggleNotificationBox","className","children","style","marginRight","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","map","index","message","timestamp","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/SPORTSWEBAPP/frontend/src/components/Notificationbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBell } from '@fortawesome/free-solid-svg-icons';\r\nimport '../styles/Notificationbar.css';\r\n\r\nconst Notificationbar = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [showNotificationBox, setShowNotificationBox] = useState(false);\r\n  const [unreadNotifications, setUnreadNotifications] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const socket = io('http://localhost:3009', {\r\n      transports: ['websocket'],\r\n    });\r\n\r\n    socket.on('connect', () => {\r\n      console.log('WebSocket connection established');\r\n    });\r\n\r\n    socket.on('newRegistration', (notification) => {\r\n      // Check if the notification is for the current user\r\n      if (notification.socketId === socket.id) {\r\n        setNotifications((prevNotifications) => [...prevNotifications, notification]);\r\n        setUnreadNotifications((prevUnreadNotifications) => prevUnreadNotifications + 1);\r\n      }\r\n    });\r\n    socket.on('newEventCreated', (notification) => {\r\n      setNotifications((prevNotifications) => [...prevNotifications, notification]);\r\n      setUnreadNotifications((prevUnreadNotifications) => prevUnreadNotifications + 1);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const toggleNotificationBox = () => {\r\n    setShowNotificationBox(!showNotificationBox);\r\n    if (!showNotificationBox) {\r\n      setUnreadNotifications(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"icons\">\r\n        <div className=\"icon\" style={{ marginRight: '10px' }} onClick={toggleNotificationBox}>\r\n          <FontAwesomeIcon icon={faBell} className=\"iconimg\" />\r\n          {unreadNotifications > 0 && (\r\n            <div className=\"counter\">{unreadNotifications}</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {showNotificationBox && (\r\n        <div className=\"notification-box\">\r\n          {notifications.map((notification, index) => (\r\n            <div key={index} className=\"notification-item\">\r\n              <div className=\"notification-header\">\r\n                <span className=\"notification-sender\">Server</span>\r\n                <span className=\"notification-title\">Registration of Event</span>\r\n              </div>\r\n              <p>{notification.message}</p>\r\n              <span className=\"notification-timestamp\">{notification.timestamp}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notificationbar;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}