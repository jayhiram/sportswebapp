{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\SPORTSWEBAPP\\\\frontend\\\\src\\\\components\\\\EventsDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsDisplay = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [filteredEvents, setFilteredEvents] = useState([]);\n  const [registrationVisible, setRegistrationVisible] = useState({});\n  const [registrationSuccess, setRegistrationSuccess] = useState(false);\n  const [filters, setFilters] = useState({\n    sport: '',\n    date: '',\n    location: ''\n  });\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  useEffect(() => {\n    applyFilters();\n  }, [filters, events]);\n  const fetchEvents = async () => {\n    try {\n      const response = await axios.get('/api/events');\n      setEvents(response.data);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  };\n  const handleRegistrationSubmit = (eventId, formData) => {\n    // Handle registration submission logic, e.g., send data to backend\n    console.log(`Event ID: ${eventId}, Registration Data:`, formData);\n    // Reset registration form visibility after submission\n    setRegistrationVisible({\n      ...registrationVisible,\n      [eventId]: false\n    });\n    // Show registration success message\n    setRegistrationSuccess(true);\n    // Reset success message after 3 seconds\n    setTimeout(() => {\n      setRegistrationSuccess(false);\n    }, 3000);\n  };\n  const handleRegistrationToggle = eventId => {\n    setRegistrationVisible({\n      ...registrationVisible,\n      [eventId]: !registrationVisible[eventId]\n    });\n  };\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilters({\n      ...filters,\n      [name]: value\n    });\n  };\n  const applyFilters = () => {\n    let filtered = events;\n    if (filters.sport) {\n      filtered = filtered.filter(event => event.sport.toLowerCase().includes(filters.sport.toLowerCase()));\n    }\n    if (filters.date) {\n      filtered = filtered.filter(event => event.date === filters.date);\n    }\n    if (filters.location) {\n      filtered = filtered.filter(event => event.location.toLowerCase().includes(filters.location.toLowerCase()));\n    }\n    setFilteredEvents(filtered);\n  };\n  const openGoogleMaps = location => {\n    window.open(`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(location)}`, '_blank');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"events-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upcoming Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"events-grid\",\n      children: filteredEvents.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: event.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", event.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time: \", event.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faMapMarkerAlt,\n            onClick: () => openGoogleMaps(event.location)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), \": \", event.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRegistrationToggle(event.id),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), registrationVisible[event.id] && /*#__PURE__*/_jsxDEV(RegistrationForm, {\n          eventId: event.id,\n          onSubmit: handleRegistrationSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), registrationSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: \"Registered successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 37\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n// Define RegistrationForm component here or import it if it's in a separate file\n_s(EventsDisplay, \"byUWGfqwLnKTFuCTxq0f57qQBdg=\");\n_c = EventsDisplay;\nexport default EventsDisplay;\nvar _c;\n$RefreshReg$(_c, \"EventsDisplay\");","map":{"version":3,"names":["React","useState","useEffect","axios","FontAwesomeIcon","faMapMarkerAlt","jsxDEV","_jsxDEV","EventsDisplay","_s","events","setEvents","filteredEvents","setFilteredEvents","registrationVisible","setRegistrationVisible","registrationSuccess","setRegistrationSuccess","filters","setFilters","sport","date","location","fetchEvents","applyFilters","response","get","data","error","console","handleRegistrationSubmit","eventId","formData","log","setTimeout","handleRegistrationToggle","handleFilterChange","e","name","value","target","filtered","filter","event","toLowerCase","includes","openGoogleMaps","window","open","encodeURIComponent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","time","icon","onClick","id","RegistrationForm","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/SPORTSWEBAPP/frontend/src/components/EventsDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst EventsDisplay = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [filteredEvents, setFilteredEvents] = useState([]);\r\n  const [registrationVisible, setRegistrationVisible] = useState({});\r\n  const [registrationSuccess, setRegistrationSuccess] = useState(false);\r\n  const [filters, setFilters] = useState({\r\n    sport: '',\r\n    date: '',\r\n    location: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    applyFilters();\r\n  }, [filters, events]);\r\n\r\n  const fetchEvents = async () => {\r\n    try {\r\n      const response = await axios.get('/api/events');\r\n      setEvents(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching events:', error);\r\n    }\r\n  };\r\n\r\n  const handleRegistrationSubmit = (eventId, formData) => {\r\n    // Handle registration submission logic, e.g., send data to backend\r\n    console.log(`Event ID: ${eventId}, Registration Data:`, formData);\r\n    // Reset registration form visibility after submission\r\n    setRegistrationVisible({ ...registrationVisible, [eventId]: false });\r\n    // Show registration success message\r\n    setRegistrationSuccess(true);\r\n    // Reset success message after 3 seconds\r\n    setTimeout(() => {\r\n      setRegistrationSuccess(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleRegistrationToggle = (eventId) => {\r\n    setRegistrationVisible({ ...registrationVisible, [eventId]: !registrationVisible[eventId] });\r\n  };\r\n\r\n  const handleFilterChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFilters({ ...filters, [name]: value });\r\n  };\r\n\r\n  const applyFilters = () => {\r\n    let filtered = events;\r\n    if (filters.sport) {\r\n      filtered = filtered.filter(event => event.sport.toLowerCase().includes(filters.sport.toLowerCase()));\r\n    }\r\n    if (filters.date) {\r\n      filtered = filtered.filter(event => event.date === filters.date);\r\n    }\r\n    if (filters.location) {\r\n      filtered = filtered.filter(event => event.location.toLowerCase().includes(filters.location.toLowerCase()));\r\n    }\r\n    setFilteredEvents(filtered);\r\n  };\r\n\r\n  const openGoogleMaps = (location) => {\r\n    window.open(`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(location)}`, '_blank');\r\n  };\r\n\r\n  return (\r\n    <div className=\"events-container\">\r\n      <h2>Upcoming Events</h2>\r\n      {/* Filters */}\r\n      <div className=\"filters\">\r\n        {/* Add filters here */}\r\n      </div>\r\n      <div className=\"events-grid\">\r\n        {/* Event cards */}\r\n        {filteredEvents.map(event => (\r\n          <div key={event.id} className=\"event-card\">\r\n            {/* Event details */}\r\n            <h3>{event.name}</h3>\r\n            <p>Date: {event.date}</p>\r\n            <p>Time: {event.time}</p>\r\n            <p>\r\n              <FontAwesomeIcon icon={faMapMarkerAlt} onClick={() => openGoogleMaps(event.location)} />\r\n              : {event.location}\r\n            </p>\r\n            <button onClick={() => handleRegistrationToggle(event.id)}>Register</button>\r\n            {registrationVisible[event.id] && (\r\n              <RegistrationForm eventId={event.id} onSubmit={handleRegistrationSubmit} />\r\n            )}\r\n            {registrationSuccess && <div className=\"success-message\">Registered successfully!</div>}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Define RegistrationForm component here or import it if it's in a separate file\r\n\r\nexport default EventsDisplay;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}