{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\SPORTSWEBAPP\\\\frontend\\\\src\\\\components\\\\Notificationbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBell } from '@fortawesome/free-solid-svg-icons';\nimport '../styles/Notificationbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notificationbar = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [showNotificationBox, setShowNotificationBox] = useState(false);\n  const [unreadNotifications, setUnreadNotifications] = useState(0);\n  useEffect(() => {\n    const socket = io('http://localhost:3009', {\n      transports: ['websocket']\n    });\n    socket.on('connect', () => {\n      console.log('WebSocket connection established');\n    });\n    socket.on('newRegistration', notification => {\n      handleNewNotification(notification);\n    });\n    socket.on('newEventCreated', notification => {\n      handleNewNotification(notification);\n    });\n    const fetchUnreadNotifications = async () => {\n      try {\n        const response = await axios.get('/api/notifications');\n        setNotifications(response.data);\n        setUnreadNotifications(response.data.filter(n => !n.is_read).length);\n      } catch (error) {\n        console.error('Error fetching notifications:', error);\n      }\n    };\n    fetchUnreadNotifications();\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const handleNewNotification = notification => {\n    setNotifications(prevNotifications => [...prevNotifications, notification]);\n    setUnreadNotifications(prevUnreadNotifications => prevUnreadNotifications + 1);\n  };\n  const toggleNotificationBox = async () => {\n    setShowNotificationBox(!showNotificationBox);\n    if (!showNotificationBox) {\n      await markNotificationsAsRead();\n      setUnreadNotifications(0);\n    }\n  };\n  const markNotificationsAsRead = async () => {\n    try {\n      await axios.put('/api/notifications/read');\n      setNotifications(prevNotifications => prevNotifications.map(n => ({\n        ...n,\n        is_read: true\n      })));\n    } catch (error) {\n      console.error('Error marking notifications as read:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        style: {\n          marginRight: '10px'\n        },\n        onClick: toggleNotificationBox,\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faBell,\n          className: \"iconimg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), unreadNotifications > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"counter\",\n          children: unreadNotifications\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), showNotificationBox && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-box\",\n      children: notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"notification-sender\",\n            children: \"Server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"notification-title\",\n            children: \"Registration of Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: notification.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"notification-timestamp\",\n          children: notification.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Notificationbar, \"cRduX9TefmjQfEl/Gjqc3OOpnoU=\");\n_c = Notificationbar;\nexport default Notificationbar;\nvar _c;\n$RefreshReg$(_c, \"Notificationbar\");","map":{"version":3,"names":["React","useState","useEffect","axios","io","FontAwesomeIcon","faBell","jsxDEV","_jsxDEV","Notificationbar","_s","notifications","setNotifications","showNotificationBox","setShowNotificationBox","unreadNotifications","setUnreadNotifications","socket","transports","on","console","log","notification","handleNewNotification","fetchUnreadNotifications","response","get","data","filter","n","is_read","length","error","disconnect","prevNotifications","prevUnreadNotifications","toggleNotificationBox","markNotificationsAsRead","put","map","className","children","style","marginRight","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","index","message","timestamp","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/SPORTSWEBAPP/frontend/src/components/Notificationbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBell } from '@fortawesome/free-solid-svg-icons';\r\nimport '../styles/Notificationbar.css';\r\n\r\nconst Notificationbar = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [showNotificationBox, setShowNotificationBox] = useState(false);\r\n  const [unreadNotifications, setUnreadNotifications] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const socket = io('http://localhost:3009', { transports: ['websocket'] });\r\n\r\n    socket.on('connect', () => {\r\n      console.log('WebSocket connection established');\r\n    });\r\n\r\n    socket.on('newRegistration', (notification) => {\r\n      handleNewNotification(notification);\r\n    });\r\n\r\n    socket.on('newEventCreated', (notification) => {\r\n      handleNewNotification(notification);\r\n    });\r\n\r\n    const fetchUnreadNotifications = async () => {\r\n      try {\r\n        const response = await axios.get('/api/notifications');\r\n        setNotifications(response.data);\r\n        setUnreadNotifications(response.data.filter((n) => !n.is_read).length);\r\n      } catch (error) {\r\n        console.error('Error fetching notifications:', error);\r\n      }\r\n    };\r\n\r\n    fetchUnreadNotifications();\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const handleNewNotification = (notification) => {\r\n    setNotifications((prevNotifications) => [...prevNotifications, notification]);\r\n    setUnreadNotifications((prevUnreadNotifications) => prevUnreadNotifications + 1);\r\n  };\r\n\r\n  const toggleNotificationBox = async () => {\r\n    setShowNotificationBox(!showNotificationBox);\r\n    if (!showNotificationBox) {\r\n      await markNotificationsAsRead();\r\n      setUnreadNotifications(0);\r\n    }\r\n  };\r\n\r\n  const markNotificationsAsRead = async () => {\r\n    try {\r\n      await axios.put('/api/notifications/read');\r\n      setNotifications((prevNotifications) =>\r\n        prevNotifications.map((n) => ({ ...n, is_read: true }))\r\n      );\r\n    } catch (error) {\r\n      console.error('Error marking notifications as read:', error);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"icons\">\r\n        <div className=\"icon\" style={{ marginRight: '10px' }} onClick={toggleNotificationBox}>\r\n          <FontAwesomeIcon icon={faBell} className=\"iconimg\" />\r\n          {unreadNotifications > 0 && (\r\n            <div className=\"counter\">{unreadNotifications}</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {showNotificationBox && (\r\n        <div className=\"notification-box\">\r\n          {notifications.map((notification, index) => (\r\n            <div key={index} className=\"notification-item\">\r\n              <div className=\"notification-header\">\r\n                <span className=\"notification-sender\">Server</span>\r\n                <span className=\"notification-title\">Registration of Event</span>\r\n              </div>\r\n              <p>{notification.message}</p>\r\n              <span className=\"notification-timestamp\">{notification.timestamp}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notificationbar;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}