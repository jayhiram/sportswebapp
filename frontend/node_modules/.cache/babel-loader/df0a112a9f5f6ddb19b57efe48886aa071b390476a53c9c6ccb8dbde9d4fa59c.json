{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\SPORTSWEBAPP\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons';\nimport socketIOClient from 'socket.io-client';\nimport '../styles/Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst users = [{\n  id: 1,\n  name: 'Alice'\n}, {\n  id: 2,\n  name: 'Bob'\n}, {\n  id: 3,\n  name: 'Charlie'\n}\n// Add more users as needed\n];\nconst Chat = () => {\n  _s();\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messageInput, setMessageInput] = useState('');\n  const [messages, setMessages] = useState({});\n  const messageContainerRef = useRef(null);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const newSocket = socketIOClient('http://localhost:5000');\n    setSocket(newSocket);\n    newSocket.on('receive-message', ({\n      senderId,\n      text\n    }) => {\n      const sender = users.find(user => user.id === senderId);\n      const newMessage = {\n        id: messages[senderId] ? messages[senderId].length + 1 : 1,\n        text,\n        sender,\n        timestamp: new Date().toLocaleString()\n      };\n      setMessages(prevMessages => ({\n        ...prevMessages,\n        [senderId]: [...(prevMessages[senderId] || []), newMessage]\n      }));\n    });\n    return () => newSocket.disconnect();\n  }, []);\n  const sendMessage = () => {\n    if (messageInput.trim() !== '' && socket) {\n      const recipientId = selectedUser.id;\n      socket.emit('send-message', {\n        senderId: 1,\n        // Replace with actual sender ID or get from authentication\n        recipientId,\n        text: messageInput.trim()\n      });\n      setMessageInput('');\n    }\n  };\n  const handleMessageInputChange = e => {\n    setMessageInput(e.target.value);\n  };\n  const selectUser = user => {\n    setSelectedUser(user);\n    if (!messages[user.id]) {\n      setMessages(prevMessages => ({\n        ...prevMessages,\n        [user.id]: []\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => selectUser(user),\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), selectedUser && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedUser.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-body\",\n          ref: messageContainerRef,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-thread\",\n            children: messages[selectedUser.id] && messages[selectedUser.id].map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.sender.id === selectedUser.id ? 'sent' : 'received'}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-sender\",\n                  children: message.sender.id === selectedUser.id ? 'You' : message.sender.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-text\",\n                  children: message.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"timestamp\",\n                  children: message.timestamp\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 23\n              }, this)\n            }, message.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: messageInput,\n          onChange: handleMessageInputChange,\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPaperPlane,\n          onClick: sendMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"3K2z/ldNeSONOpqnSsxYRoOoFoU=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","FontAwesomeIcon","faPaperPlane","socketIOClient","jsxDEV","_jsxDEV","Fragment","_Fragment","users","id","name","Chat","_s","selectedUser","setSelectedUser","messageInput","setMessageInput","messages","setMessages","messageContainerRef","socket","setSocket","newSocket","on","senderId","text","sender","find","user","newMessage","length","timestamp","Date","toLocaleString","prevMessages","disconnect","sendMessage","trim","recipientId","emit","handleMessageInputChange","e","target","value","selectUser","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","ref","message","onChange","placeholder","icon","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/SPORTSWEBAPP/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons';\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nimport '../styles/Chat.css';\r\n\r\nconst users = [\r\n  { id: 1, name: 'Alice' },\r\n  { id: 2, name: 'Bob' },\r\n  { id: 3, name: 'Charlie' },\r\n  // Add more users as needed\r\n];\r\n\r\nconst Chat = () => {\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [messageInput, setMessageInput] = useState('');\r\n  const [messages, setMessages] = useState({});\r\n  const messageContainerRef = useRef(null);\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const newSocket = socketIOClient('http://localhost:5000');\r\n    setSocket(newSocket);\r\n\r\n    newSocket.on('receive-message', ({ senderId, text }) => {\r\n      const sender = users.find(user => user.id === senderId);\r\n      const newMessage = {\r\n        id: messages[senderId] ? messages[senderId].length + 1 : 1,\r\n        text,\r\n        sender,\r\n        timestamp: new Date().toLocaleString()\r\n      };\r\n      setMessages(prevMessages => ({\r\n        ...prevMessages,\r\n        [senderId]: [...(prevMessages[senderId] || []), newMessage]\r\n      }));\r\n    });\r\n\r\n    return () => newSocket.disconnect();\r\n  }, []);\r\n\r\n  const sendMessage = () => {\r\n    if (messageInput.trim() !== '' && socket) {\r\n      const recipientId = selectedUser.id;\r\n      socket.emit('send-message', {\r\n        senderId: 1, // Replace with actual sender ID or get from authentication\r\n        recipientId,\r\n        text: messageInput.trim()\r\n      });\r\n      setMessageInput('');\r\n    }\r\n  };\r\n\r\n  const handleMessageInputChange = (e) => {\r\n    setMessageInput(e.target.value);\r\n  };\r\n\r\n  const selectUser = (user) => {\r\n    setSelectedUser(user);\r\n    if (!messages[user.id]) {\r\n      setMessages(prevMessages => ({\r\n        ...prevMessages,\r\n        [user.id]: []\r\n      }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"user-list\">\r\n        <h2>Users</h2>\r\n        <ul>\r\n          {users.map(user => (\r\n            <li key={user.id} onClick={() => selectUser(user)}>\r\n              <strong>{user.name}</strong>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      {selectedUser && (\r\n        <>\r\n          <div className=\"chat-header\">\r\n            <h2>{selectedUser.name}</h2>\r\n          </div>\r\n          <div className=\"chat-body-container\">\r\n            <div className=\"chat-body\" ref={messageContainerRef}>\r\n              <div className=\"message-thread\">\r\n                {messages[selectedUser.id] &&\r\n                  messages[selectedUser.id].map(message => (\r\n                    <div className={`message ${message.sender.id === selectedUser.id ? 'sent' : 'received'}`} key={message.id}>\r\n                      <div className=\"message-content\">\r\n                        <div className=\"message-sender\">{message.sender.id === selectedUser.id ? 'You' : message.sender.name}</div>\r\n                        <div className=\"message-text\">{message.text}</div>\r\n                        <div className=\"timestamp\">{message.timestamp}</div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"chat-footer\">\r\n            <textarea\r\n              value={messageInput}\r\n              onChange={handleMessageInputChange}\r\n              placeholder=\"Type your message...\"\r\n            />\r\n            <FontAwesomeIcon icon={faPaperPlane} onClick={sendMessage} />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}