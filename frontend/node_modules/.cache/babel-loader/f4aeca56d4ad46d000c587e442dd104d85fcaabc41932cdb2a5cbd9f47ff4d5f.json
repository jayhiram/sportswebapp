{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\SPORTSWEBAPP\\\\frontend\\\\src\\\\components\\\\Notificationbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBell } from '@fortawesome/free-solid-svg-icons';\nimport '../styles/Notificationbar.css';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notificationbar = () => {\n  _s();\n  const [notificationCount, setNotificationCount] = useState(0);\n  const [showNotificationBox, setShowNotificationBox] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    const socket = io('http://localhost:3009'); // Replace with your server URL\n\n    socket.on('newEventCreated', data => {\n      console.log('Received new event notification:', data);\n      setNotifications(prevNotifications => [...prevNotifications, data]);\n      setNotificationCount(prevCount => prevCount + 1);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const handleNotificationClick = () => {\n    setShowNotificationBox(!showNotificationBox);\n    if (showNotificationBox) {\n      setNotificationCount(0); // Reset notification count when notification box is opened\n      // Emit an event to the server to indicate that the user has seen the notifications\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        style: {\n          marginRight: '10px'\n        },\n        onClick: handleNotificationClick,\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faBell,\n          className: \"iconimg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"counter\",\n          children: notificationCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), showNotificationBox && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-box\",\n      children: notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-item\",\n        children: notification.message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Notificationbar, \"z3apT/U7j6VL4Qx9+2c4qPGc5ko=\");\n_c = Notificationbar;\nexport default Notificationbar;\nvar _c;\n$RefreshReg$(_c, \"Notificationbar\");","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faBell","io","jsxDEV","_jsxDEV","Notificationbar","_s","notificationCount","setNotificationCount","showNotificationBox","setShowNotificationBox","notifications","setNotifications","socket","on","data","console","log","prevNotifications","prevCount","disconnect","handleNotificationClick","className","children","style","marginRight","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","map","notification","index","message","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/SPORTSWEBAPP/frontend/src/components/Notificationbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBell } from '@fortawesome/free-solid-svg-icons';\r\nimport '../styles/Notificationbar.css';\r\nimport io from 'socket.io-client';\r\n\r\nconst Notificationbar = () => {\r\n  const [notificationCount, setNotificationCount] = useState(0);\r\n  const [showNotificationBox, setShowNotificationBox] = useState(false);\r\n  const [notifications, setNotifications] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    const socket = io('http://localhost:3009'); // Replace with your server URL\r\n\r\n    socket.on('newEventCreated', (data) => {\r\n      console.log('Received new event notification:', data);\r\n      setNotifications((prevNotifications) => [...prevNotifications, data]);\r\n      setNotificationCount((prevCount) => prevCount + 1);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const handleNotificationClick = () => {\r\n    setShowNotificationBox(!showNotificationBox);\r\n    if (showNotificationBox) {\r\n      setNotificationCount(0); // Reset notification count when notification box is opened\r\n      // Emit an event to the server to indicate that the user has seen the notifications\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"icons\">\r\n        <div className=\"icon\" style={{ marginRight: '10px' }} onClick={handleNotificationClick}>\r\n          <FontAwesomeIcon icon={faBell} className=\"iconimg\" />\r\n          <div className=\"counter\">{notificationCount}</div>\r\n        </div>\r\n      </div>\r\n      {showNotificationBox && (\r\n        <div className=\"notification-box\">\r\n          {/* Render notifications */}\r\n          {notifications.map((notification, index) => (\r\n            <div key={index} className=\"notification-item\">\r\n              {notification.message}\r\n            </div>\r\n          ))}\r\n          {/* You can add further UI elements for acknowledgements or actions */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notificationbar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}